@model EazyMenu.Web.ViewModels.Orders.OrderListViewModel
@{
    ViewData["Title"] = "مدیریت سفارش‌ها";
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h2 class="mb-0">
                    <i class="bi bi-bag-check me-2"></i>
                    مدیریت سفارش‌ها
                </h2>
                <div>
                    <button class="btn btn-outline-primary" onclick="location.reload()">
                        <i class="bi bi-arrow-clockwise"></i>
                        بروزرسانی
                    </button>
                </div>
            </div>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i>
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i>
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="card shadow-sm">
        <div class="card-header bg-white border-bottom">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <ul class="nav nav-pills">
                        <li class="nav-item">
                            <a class="nav-link @(string.IsNullOrEmpty(Model.StatusFilter) ? "active" : "")" 
                               asp-action="Index">
                                همه
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @(Model.StatusFilter == "Pending" ? "active" : "")" 
                               asp-action="Index" asp-route-status="Pending">
                                در انتظار
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @(Model.StatusFilter == "Confirmed" ? "active" : "")" 
                               asp-action="Index" asp-route-status="Confirmed">
                                تأیید شده
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @(Model.StatusFilter == "Completed" ? "active" : "")" 
                               asp-action="Index" asp-route-status="Completed">
                                تکمیل شده
                            </a>
                        </li>
                    </ul>
                </div>
                <div class="col-md-6 text-end">
                    <small class="text-muted">
                        صفحه @Model.PageNumber
                    </small>
                </div>
            </div>
        </div>

        <div class="card-body p-0">
            @if (!Model.HasOrders)
            {
                <div class="text-center py-5">
                    <i class="bi bi-inbox display-1 text-muted"></i>
                    <p class="mt-3 text-muted">
                        @if (string.IsNullOrEmpty(Model.StatusFilter))
                        {
                            <span>هنوز سفارشی ثبت نشده است.</span>
                        }
                        else
                        {
                            <span>سفارشی با این وضعیت یافت نشد.</span>
                        }
                    </p>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>شماره سفارش</th>
                                <th>مشتری</th>
                                <th>نوع تحویل</th>
                                <th>مبلغ</th>
                                <th>وضعیت</th>
                                <th>زمان ثبت</th>
                                <th>عملیات</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.Orders)
                            {
                                <tr>
                                    <td>
                                        <strong>@order.OrderNumber</strong>
                                    </td>
                                    <td>
                                        <div>@order.CustomerName</div>
                                        <small class="text-muted">@order.CustomerPhone</small>
                                    </td>
                                    <td>
                                        <span class="@order.FulfillmentMethodBadge">
                                            @order.FulfillmentMethod
                                        </span>
                                    </td>
                                    <td>
                                        <strong>@order.TotalAmount.ToString("N0") تومان</strong>
                                    </td>
                                    <td>
                                        <span class="@order.StatusBadgeClass">
                                            @order.Status
                                        </span>
                                    </td>
                                    <td>
                                        <div>@order.CreatedAt.ToString("HH:mm")</div>
                                        <small class="text-muted">@order.RelativeTime</small>
                                    </td>
                                    <td>
                                        <a asp-action="Details" asp-route-id="@order.OrderId" 
                                           class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-eye"></i>
                                            مشاهده
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="card-footer bg-white border-top">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            نمایش @Model.Orders.Count سفارش
                        </div>
                        <nav>
                            <ul class="pagination pagination-sm mb-0">
                                @if (Model.PageNumber > 1)
                                {
                                    <li class="page-item">
                                        <a class="page-link" asp-action="Index" 
                                           asp-route-status="@Model.StatusFilter" 
                                           asp-route-page="@(Model.PageNumber - 1)">
                                            قبلی
                                        </a>
                                    </li>
                                }
                                <li class="page-item active">
                                    <span class="page-link">@Model.PageNumber</span>
                                </li>
                                @if (Model.Orders.Count == Model.PageSize)
                                {
                                    <li class="page-item">
                                        <a class="page-link" asp-action="Index" 
                                           asp-route-status="@Model.StatusFilter" 
                                           asp-route-page="@(Model.PageNumber + 1)">
                                            بعدی
                                        </a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        (function () {
            // Demo tenant ID - TODO: Replace with actual tenant from auth/session
            const demoTenantId = "00000000-0000-0000-0000-000000000001";
            
            // Setup SignalR connection
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/hubs/order-alerts")
                .withAutomaticReconnect()
                .build();

            // Subscribe to order events
            connection.on("orderCreated", function (payload) {
                console.log("سفارش جدید:", payload);
                
                // Show notification
                showNotification("سفارش جدید!", `سفارش ${payload.orderNumber} ثبت شد. مبلغ: ${payload.totalAmount.toLocaleString('fa-IR')} تومان`);
                
                // Play notification sound
                playNotificationSound();
                
                // Reload page after 2 seconds
                setTimeout(function() {
                    location.reload();
                }, 2000);
            });

            connection.on("orderConfirmed", function (payload) {
                console.log("سفارش تأیید شد:", payload);
                showNotification("سفارش تأیید شد", `سفارش ${payload.orderNumber} تأیید شد.`);
            });

            connection.on("orderCompleted", function (payload) {
                console.log("سفارش تکمیل شد:", payload);
                showNotification("سفارش تکمیل شد", `سفارش ${payload.orderNumber} تکمیل شد.`);
            });

            connection.on("orderCancelled", function (payload) {
                console.log("سفارش لغو شد:", payload);
                showNotification("سفارش لغو شد", `سفارش ${payload.orderNumber} لغو شد.`);
            });

            // Start connection and subscribe to tenant
            connection.start()
                .then(function () {
                    console.log("SignalR متصل شد");
                    return connection.invoke("SubscribeToTenant", demoTenantId);
                })
                .then(function () {
                    console.log("عضویت در کانال اعلان‌های تنانت فعال شد");
                })
                .catch(function (err) {
                    console.error("خطا در اتصال SignalR:", err);
                });

            // Show browser notification
            function showNotification(title, body) {
                if ("Notification" in window && Notification.permission === "granted") {
                    new Notification(title, {
                        body: body,
                        icon: "/favicon.ico",
                        tag: "order-notification"
                    });
                } else if ("Notification" in window && Notification.permission !== "denied") {
                    Notification.requestPermission().then(function (permission) {
                        if (permission === "granted") {
                            new Notification(title, {
                                body: body,
                                icon: "/favicon.ico",
                                tag: "order-notification"
                            });
                        }
                    });
                }
                
                // Fallback: Show alert box
                if (!("Notification" in window) || Notification.permission === "denied") {
                    const alertDiv = document.createElement("div");
                    alertDiv.className = "alert alert-info alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3";
                    alertDiv.style.zIndex = "9999";
                    alertDiv.innerHTML = `
                        <strong>${title}</strong><br>${body}
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    `;
                    document.body.appendChild(alertDiv);
                    
                    setTimeout(function() {
                        alertDiv.remove();
                    }, 5000);
                }
            }

            // Play notification sound
            function playNotificationSound() {
                const audio = new Audio("data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmwhBTGH0fPTgjMGHm7A7+OZSA0PVa/n7aVaFgxMouD1wmwiCDCA0fPTgjIHHmvA7+OYSAwOVrDo8KBaFQxMouD4v2whCDCB0fPSgTIHHmvA7+OZSA4NVrHo76BaFQ1MouD4v2wiBTCA0fPQgTIIHmvA7+OYSg4NVrHo76BaFgxMouD4v2whBTCA0fPQgTIIHmzB7+OYSg4NV7Do7qBaFQxNoeDyv20iBTCA0fPQgTIIHmzB7+OZSg4NV7Hp7qBaFg1Noub0wG4jBjGB0fPPgDEHHWvA7+OZSw8NWLLq76FbFw5OpOX0wG0hBi+A0PPPfy8GGmq/7eOYSQ4MWLPq7qFdGQ9PpeX0wG8jCDGC0vPQgzQKH2y/7uSaSQ8PWbXt76FbFg5Ope"; // Simplified beep sound
                audio.play().catch(function(err) {
                    console.log("خطا در پخش صدای اعلان:", err);
                });
            }

            // Auto-refresh fallback for older browsers
            @if (Model.StatusFilter == "Pending" || string.IsNullOrEmpty(Model.StatusFilter))
            {
                <text>
                setTimeout(function() {
                    if (connection.state !== signalR.HubConnectionState.Connected) {
                        location.reload();
                    }
                }, 60000); // 60 seconds fallback
                </text>
            }
        })();
    </script>
}
