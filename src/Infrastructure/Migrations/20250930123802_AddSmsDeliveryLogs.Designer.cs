// <auto-generated />
using System;
using EazyMenu.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EazyMenu.Infrastructure.Migrations
{
    [DbContext(typeof(EazyMenuDbContext))]
    [Migration("20250930123802_AddSmsDeliveryLogs")]
    partial class AddSmsDeliveryLogs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EazyMenu.Domain.Aggregates.Payments.PaymentTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PaymentId");

                    b.Property<DateTime?>("CompletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("DiscountCode")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ExternalReference")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FailureReason")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("GatewayAuthority")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("IssuedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Method")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RefundedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("SubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("TenantId");

                    b.ToTable("PaymentTransactions", (string)null);
                });

            modelBuilder.Entity("EazyMenu.Domain.Aggregates.Tenants.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BranchId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("TenantBranches", (string)null);
                });

            modelBuilder.Entity("EazyMenu.Domain.Aggregates.Tenants.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SubscriptionId");

                    b.Property<string>("DiscountCode")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsTrial")
                        .HasColumnType("bit");

                    b.Property<int>("Plan")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("TenantSubscriptions", (string)null);
                });

            modelBuilder.Entity("EazyMenu.Domain.Aggregates.Tenants.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActiveSubscriptionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ActiveSubscriptionId");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ContactEmail");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("ContactPhone");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SuspendedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActiveSubscriptionId");

                    b.ToTable("Tenants", (string)null);
                });

            modelBuilder.Entity("EazyMenu.Infrastructure.Persistence.Models.SmsDeliveryLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ErrorCode")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTimeOffset>("OccurredAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Payload")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OccurredAt");

                    b.HasIndex("PhoneNumber");

                    b.HasIndex("Status");

                    b.ToTable("SmsDeliveryLogs", (string)null);
                });

            modelBuilder.Entity("EazyMenu.Infrastructure.Persistence.Models.TenantProvisioningRecord", b =>
                {
                    b.Property<Guid>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiscountCode")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ManagerEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ManagerPhone")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlanCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RestaurantSlug")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("UseTrial")
                        .HasColumnType("bit");

                    b.HasKey("TenantId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("TenantProvisionings", (string)null);
                });

            modelBuilder.Entity("EazyMenu.Domain.Aggregates.Payments.PaymentTransaction", b =>
                {
                    b.OwnsOne("EazyMenu.Domain.ValueObjects.Money", "Amount", b1 =>
                        {
                            b1.Property<Guid>("PaymentTransactionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("NetAmount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("nvarchar(8)")
                                .HasColumnName("Currency");

                            b1.HasKey("PaymentTransactionId");

                            b1.ToTable("PaymentTransactions");

                            b1.WithOwner()
                                .HasForeignKey("PaymentTransactionId");
                        });

                    b.OwnsOne("EazyMenu.Domain.ValueObjects.Percentage", "DiscountPercentage", b1 =>
                        {
                            b1.Property<Guid>("PaymentTransactionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("DiscountPercentage");

                            b1.HasKey("PaymentTransactionId");

                            b1.ToTable("PaymentTransactions");

                            b1.WithOwner()
                                .HasForeignKey("PaymentTransactionId");
                        });

                    b.OwnsOne("EazyMenu.Domain.ValueObjects.Money", "OriginalAmount", b1 =>
                        {
                            b1.Property<Guid>("PaymentTransactionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("OriginalAmount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("nvarchar(8)")
                                .HasColumnName("OriginalCurrency");

                            b1.HasKey("PaymentTransactionId");

                            b1.ToTable("PaymentTransactions");

                            b1.WithOwner()
                                .HasForeignKey("PaymentTransactionId");
                        });

                    b.Navigation("Amount")
                        .IsRequired();

                    b.Navigation("DiscountPercentage");

                    b.Navigation("OriginalAmount")
                        .IsRequired();
                });

            modelBuilder.Entity("EazyMenu.Domain.Aggregates.Tenants.Branch", b =>
                {
                    b.HasOne("EazyMenu.Domain.Aggregates.Tenants.Tenant", null)
                        .WithMany("Branches")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("EazyMenu.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("BranchId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)")
                                .HasColumnName("City");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(32)
                                .HasColumnType("nvarchar(32)")
                                .HasColumnName("PostalCode");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)")
                                .HasColumnName("Street");

                            b1.HasKey("BranchId");

                            b1.ToTable("TenantBranches");

                            b1.WithOwner()
                                .HasForeignKey("BranchId");
                        });

                    b.OwnsMany("EazyMenu.Domain.Aggregates.Tenants.Table", "Tables", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("TableId");

                            b1.Property<Guid>("BranchId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("BranchId");

                            b1.Property<int>("Capacity")
                                .HasColumnType("int");

                            b1.Property<bool>("IsOutOfService")
                                .HasColumnType("bit");

                            b1.Property<bool>("IsOutdoor")
                                .HasColumnType("bit");

                            b1.Property<string>("Label")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.HasKey("Id");

                            b1.HasIndex("BranchId");

                            b1.ToTable("BranchTables", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("BranchId");
                        });

                    b.OwnsMany("EazyMenu.Domain.ValueObjects.QrCodeReference", "QrCodes", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("BranchId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("BranchId");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)")
                                .HasColumnName("Code");

                            b1.HasKey("Id");

                            b1.HasIndex("BranchId");

                            b1.ToTable("BranchQrCodes", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("BranchId");
                        });

                    b.OwnsMany("EazyMenu.Domain.ValueObjects.ScheduleSlot", "WorkingHours", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("BranchId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("BranchId");

                            b1.Property<int>("DayOfWeek")
                                .HasColumnType("int");

                            b1.Property<TimeSpan>("End")
                                .HasColumnType("time");

                            b1.Property<TimeSpan>("Start")
                                .HasColumnType("time");

                            b1.HasKey("Id");

                            b1.HasIndex("BranchId");

                            b1.ToTable("BranchWorkingHours", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("BranchId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("QrCodes");

                    b.Navigation("Tables");

                    b.Navigation("WorkingHours");
                });

            modelBuilder.Entity("EazyMenu.Domain.Aggregates.Tenants.Subscription", b =>
                {
                    b.HasOne("EazyMenu.Domain.Aggregates.Tenants.Tenant", null)
                        .WithMany("Subscriptions")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("EazyMenu.Domain.ValueObjects.Percentage", "DiscountPercentage", b1 =>
                        {
                            b1.Property<Guid>("SubscriptionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("DiscountPercentage");

                            b1.HasKey("SubscriptionId");

                            b1.ToTable("TenantSubscriptions");

                            b1.WithOwner()
                                .HasForeignKey("SubscriptionId");
                        });

                    b.OwnsOne("EazyMenu.Domain.ValueObjects.Money", "Price", b1 =>
                        {
                            b1.Property<Guid>("SubscriptionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("PriceAmount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("nvarchar(8)")
                                .HasColumnName("PriceCurrency");

                            b1.HasKey("SubscriptionId");

                            b1.ToTable("TenantSubscriptions");

                            b1.WithOwner()
                                .HasForeignKey("SubscriptionId");
                        });

                    b.Navigation("DiscountPercentage");

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("EazyMenu.Domain.Aggregates.Tenants.Tenant", b =>
                {
                    b.HasOne("EazyMenu.Domain.Aggregates.Tenants.Subscription", "ActiveSubscription")
                        .WithMany()
                        .HasForeignKey("ActiveSubscriptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("EazyMenu.Domain.ValueObjects.Address", "HeadquartersAddress", b1 =>
                        {
                            b1.Property<Guid>("TenantId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)")
                                .HasColumnName("HeadquartersCity");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(32)
                                .HasColumnType("nvarchar(32)")
                                .HasColumnName("HeadquartersPostalCode");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)")
                                .HasColumnName("HeadquartersStreet");

                            b1.HasKey("TenantId");

                            b1.ToTable("Tenants");

                            b1.WithOwner()
                                .HasForeignKey("TenantId");
                        });

                    b.OwnsOne("EazyMenu.Domain.ValueObjects.BrandProfile", "Branding", b1 =>
                        {
                            b1.Property<Guid>("TenantId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("DisplayName")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("BrandDisplayName");

                            b1.Property<string>("LogoUrl")
                                .HasMaxLength(512)
                                .HasColumnType("nvarchar(512)")
                                .HasColumnName("BrandLogoUrl");

                            b1.Property<string>("PrimaryColor")
                                .HasMaxLength(32)
                                .HasColumnType("nvarchar(32)")
                                .HasColumnName("BrandPrimaryColor");

                            b1.HasKey("TenantId");

                            b1.ToTable("Tenants");

                            b1.WithOwner()
                                .HasForeignKey("TenantId");
                        });

                    b.Navigation("ActiveSubscription");

                    b.Navigation("Branding")
                        .IsRequired();

                    b.Navigation("HeadquartersAddress");
                });

            modelBuilder.Entity("EazyMenu.Domain.Aggregates.Tenants.Tenant", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
